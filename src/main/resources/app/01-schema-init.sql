CREATE TABLE question (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  type VARCHAR(20) DEFAULT 'READ' NOT NULL, -- Read, Write, ...
  question VARCHAR(1000) NOT NULL,
  answer VARCHAR(100) NOT NULL,
  hint VARCHAR(100)
);

CREATE TABLE label (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(100) NOT NULL
);

CREATE TABLE question_label (
  question_id INTEGER FOREIGN KEY REFERENCES question (id),
  label_id INTEGER FOREIGN KEY REFERENCES label (id),
  CONSTRAINT quest_label_uk1 UNIQUE (question_id, label_id)
);

CREATE TABLE player (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY (
  START WITH 100 ) PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  level INTEGER DEFAULT 0, -- higher level has less clock time
  avatar VARCHAR(1000) -- url to their picture
);

CREATE TABLE player_label (
  player_id INTEGER FOREIGN KEY REFERENCES player (id),
  label_id INTEGER FOREIGN KEY REFERENCES label (id),
  level INTEGER DEFAULT 0, -- different level/time for different category of questions
  CONSTRAINT player_label_uk1 UNIQUE (player_id, label_id)
);

CREATE TABLE player_question (
  player_id INTEGER FOREIGN KEY REFERENCES player (id),
  question_id INTEGER FOREIGN KEY REFERENCES question (id),
  score DECIMAL DEFAULT 0 NOT NULL,
  attempts INTEGER NOT NULL,
  CONSTRAINT player_quest_status UNIQUE (player_id, question_id)
);

CREATE TABLE game (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  rows INTEGER DEFAULT 3,
  cols INTEGER DEFAULT 3,
  created DATETIME DEFAULT now(),
  last_turn INTEGER FOREIGN KEY REFERENCES player (id)
);

CREATE TABLE game_player_question (
  game_id INTEGER FOREIGN KEY REFERENCES game (id),
  player_id INTEGER FOREIGN KEY REFERENCES player (id),
  question_id INTEGER FOREIGN KEY REFERENCES question (id),
  CONSTRAINT game_player_question_uk1 UNIQUE (game_id, player_id, question_id)
);

